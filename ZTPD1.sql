--1.
CREATE TYPE samochod AS OBJECT (
    MARKA VARCHAR(20),
    MODEL VARCHAR(20),
    KILOMETRY NUMBER(10,1),
    DATA_PRODUKCJI DATE,
    CENA NUMBER(10,1)
    );
    
CREATE TABLE samochody of samochod;

INSERT INTO samochody VALUES
    (NEW samochod('FIAT','BRAVA',60000,DATE '1999-11-10',25000));
INSERT INTO samochody VALUES
    (NEW samochod('FORD','MONDEO',80000,DATE '1997-05-10',45000));
INSERT INTO samochody VALUES
    (NEW samochod('MAZDA','323',12000,DATE '2000-09-20',52000));

desc samochod;

select * from samochody;

--2.
CREATE TABLE wlasciciele (
    IMIE VARCHAR2(100),
    NAZWISKO VARCHAR2(100),
    AUTO samochod);

INSERT INTO wlasciciele VALUES('JAN','KOWALSKI',NEW samochod('FIAT','SEICENTO',30000, DATE '2010-12-02',19500));
INSERT INTO wlasciciele VALUES('ADAM','NOWAK',NEW samochod('OPEL','ASTRA',34000, DATE '2009-06-01',33700));

desc wlasciciele;

select * from wlasciciele;

--3.
ALTER TYPE samochod REPLACE AS OBJECT(
    MARKA VARCHAR(20),
    MODEL VARCHAR(20),
    KILOMETRY NUMBER(10,1),
    DATA_PRODUKCJI DATE,
    CENA NUMBER(10,1),
    MEMBER FUNCTION wartosc RETURN NUMBER
    );

CREATE OR REPLACE TYPE BODY samochod AS
    MEMBER FUNCTION wartosc RETURN NUMBER IS
    BEGIN
        RETURN ROUND(CENA*(1 - POWER(0.1,EXTRACT(YEAR FROM CURRENT_DATE) - EXTRACT(YEAR FROM DATA_PRODUKCJI))));
    END wartosc;
END;

SELECT s.marka, s.cena, s.wartosc() FROM SAMOCHODY s;

--4.
ALTER TYPE samochod ADD MAP MEMBER FUNCTION odwzoruj RETURN NUMBER;

CREATE OR REPLACE TYPE BODY samochod AS
    MEMBER FUNCTION wartosc RETURN NUMBER IS
    BEGIN
        RETURN ROUND(CENA*(1 - POWER(0.1,EXTRACT(YEAR FROM CURRENT_DATE) - EXTRACT(YEAR FROM DATA_PRODUKCJI))));
    END wartosc;
    MAP MEMBER FUNCTION odwzoruj RETURN NUMBER IS
    BEGIN
        RETURN ROUND(KILOMETRY/1000)+EXTRACT(YEAR FROM CURRENT_DATE) - EXTRACT(YEAR FROM DATA_PRODUKCJI);
    END odwzoruj;
END;

SELECT * FROM SAMOCHODY s ORDER BY VALUE(s);

--5.
CREATE TYPE wlasciciel AS OBJECT(
    IMIE VARCHAR2(20),
    NAZWISKO VARCHAR2(20));

ALTER TYPE samochod REPLACE AS OBJECT(
    MARKA VARCHAR(20),
    MODEL VARCHAR(20),
    KILOMETRY NUMBER(10,1),
    DATA_PRODUKCJI DATE,
    CENA NUMBER(10,1),
    MEMBER FUNCTION wartosc RETURN NUMBER,
    MAP MEMBER FUNCTION odwzoruj RETURN NUMBER,
    wlasciciel_sam REF wlasciciel
    );

--7.
DECLARE
    TYPE t_ksiazki IS VARRAY(10) OF VARCHAR2(20);
    tytuly t_ksiazki := t_ksiazki('');
    
BEGIN
  tytuly(1) := 'tytul 1';
  tytuly.EXTEND(9);
 
  FOR i IN 2..10 LOOP
    tytuly(i) := 'Tytul ' || i;
  END LOOP;
 
  FOR i IN tytuly.FIRST()..tytuly.LAST() LOOP
    DBMS_OUTPUT.PUT_LINE(tytuly(i));
  END LOOP;
 
  tytuly.TRIM(2);
 
  FOR i IN tytuly.FIRST()..tytuly.LAST() LOOP
    DBMS_OUTPUT.PUT_LINE(tytuly(i));
  END LOOP;
 
  DBMS_OUTPUT.PUT_LINE('Limit: ' || tytuly.LIMIT());
  DBMS_OUTPUT.PUT_LINE('Liczba elementow: ' || tytuly.COUNT());
 
  tytuly.EXTEND(1);
  tytuly(9) := 9;
 
  DBMS_OUTPUT.PUT_LINE('Limit: ' || tytuly.LIMIT());
  DBMS_OUTPUT.PUT_LINE('Liczba elementow: ' || tytuly.COUNT());
 
  tytuly.DELETE();
 
  DBMS_OUTPUT.PUT_LINE('Limit: ' || tytuly.LIMIT());
  DBMS_OUTPUT.PUT_LINE('Liczba elementow: ' || tytuly.COUNT());
END;

--9.

DECLARE
  TYPE t_months IS TABLE OF VARCHAR2(20);
  my_months t_months := t_months();
 
BEGIN
  my_months.EXTEND(2);
 
  my_months(1) := 'STYCZEN';
  my_months(2) := 'LUTY';
 
  my_months.EXTEND(10);
 
  FOR i IN 3..12 LOOP
    my_months(i) := 'MIESIAC' || i;
  END LOOP;
 
  FOR i IN my_months.FIRST()..my_months.LAST() LOOP
    DBMS_OUTPUT.PUT_LINE(my_months(i));
  END LOOP;
 
  my_months.TRIM(2);
 
  FOR i IN my_months.FIRST()..my_months.LAST() LOOP
    DBMS_OUTPUT.PUT_LINE(my_months(i));
  END LOOP;
 
  my_months.DELETE(5,7);
 
  DBMS_OUTPUT.PUT_LINE('Limit: ' || my_months.LIMIT());
  DBMS_OUTPUT.PUT_LINE('Liczba elementow: ' || my_months.COUNT());
 
  FOR i IN my_months.FIRST()..my_months.LAST() LOOP
    IF my_months.EXISTS(i) THEN
      DBMS_OUTPUT.PUT_LINE(my_months(i));
    END IF;
  END LOOP;
 
  my_months(5) := 'MAJ';
  my_months(6) := 'CZERWIEC';
  my_months(7) := 'LIPIEC';
 
  FOR i IN my_months.FIRST()..my_months.LAST() LOOP
    IF my_months.EXISTS(i) THEN
      DBMS_OUTPUT.PUT_LINE(my_months(i));
    END IF;
  END LOOP;
 
  DBMS_OUTPUT.PUT_LINE('Limit: ' || my_months.LIMIT());
  DBMS_OUTPUT.PUT_LINE('Liczba elementow: ' || my_months.COUNT());
END;

--11.
CREATE TYPE PRODUKTY AS TABLE OF VARCHAR2(20);

CREATE OR REPLACE TYPE t_ZAKUP AS OBJECT (
    ID_ZAKUPU NUMBER,
    KOSZYK_PRODUKTOW PRODUKTY);
 
CREATE TABLE ZAKUPY OF t_ZAKUP
NESTED TABLE KOSZYK_PRODUKTOW STORE AS ZAKUPIONE;
 
 INSERT INTO ZAKUPY VALUES(
                    t_ZAKUP(1, PRODUKTY('JABLKO','KIWI'))
                    );
 INSERT INTO ZAKUPY VALUES(
                    t_ZAKUP(2, PRODUKTY('KIWI','CEBULA'))
                    );
 
 SELECT * FROM ZAKUPY;

DELETE FROM ZAKUPY WHERE ID_ZAKUPU IN (
    SELECT y.ID_ZAKUPU FROM ZAKUPY y, TABLE(y.KOSZYK_PRODUKTOW) z WHERE z.column_value = 'CEBULA');

--22.

CREATE TYPE KSIAZKA AS OBJECT (
    ID_KSIAZKI NUMBER,
    ID_PISARZA NUMBER,
    TYTUL VARCHAR2(50),
    DATA_WYDANIA DATE,
    MEMBER FUNCTION WIEK RETURN NUMBER
);

CREATE OR REPLACE TYPE BODY KSIAZKA AS
    MEMBER FUNCTION WIEK RETURN NUMBER IS
    BEGIN
        RETURN EXTRACT(YEAR FROM CURRENT_DATE) - EXTRACT(YEAR FROM DATA_WYDANIA);
    END WIEK;
END;

CREATE TYPE KSIAZKI_T AS TABLE OF KSIAZKA;

CREATE OR REPLACE TYPE PISARZ AS OBJECT (
    ID_PISARZA NUMBER,
    NAZWISKO VARCHAR2(20),
    DATA_UR DATE,
    KSIAZKI KSIAZKI_T,
    MEMBER FUNCTION ILE_KSIAZEK RETURN NUMBER
);

CREATE OR REPLACE TYPE BODY PISARZ AS
    MEMBER FUNCTION ILE_KSIAZEK RETURN NUMBER IS
    BEGIN
        RETURN KSIAZKI.COUNT();
    END ILE_KSIAZEK;
END;

CREATE OR REPLACE VIEW KSIAZKI_VIEW OF KSIAZKA
WITH OBJECT IDENTIFIER(ID_KSIAZKI)
AS SELECT ID_KSIAZKI, MAKE_REF(PISARZE_VIEW,ID_PISARZA), TYTUL, DATA_WYDANIA FROM KSIAZKI;

CREATE TABLE PISARZE (
  ID_PISARZA NUMBER PRIMARY KEY,
  NAZWISKO VARCHAR2(20),
  DATA_UR DATE );

CREATE OR REPLACE VIEW PISARZE_VIEW OF PISARZ
WITH OBJECT IDENTIFIER(ID_PISARZA)
AS SELECT ID_PISARZA, NAZWISKO, DATA_UR,
CAST(MULTISET(SELECT TYTUL FROM KSIAZKI WHERE ID_PISARZA=P.ID_PISARZA) AS KSIAZKI_T) FROM PISARZE P;

--23.

CREATE OR REPLACE TYPE AUTO AS OBJECT (
  MARKA VARCHAR2(20),
  MODEL VARCHAR2(20),
  KILOMETRY NUMBER,
  DATA_PRODUKCJI DATE,
  CENA NUMBER(10,2),
  MEMBER FUNCTION WARTOSC RETURN NUMBER
) NOT FINAL;

CREATE OR REPLACE TYPE BODY AUTO AS
  MEMBER FUNCTION WARTOSC RETURN NUMBER IS
    WIEK NUMBER;
    WARTOSC NUMBER;
  BEGIN
    WIEK := ROUND(MONTHS_BETWEEN(SYSDATE,DATA_PRODUKCJI)/12);
    WARTOSC := CENA - (WIEK * 0.1 * CENA);
    IF (WARTOSC < 0) THEN
      WARTOSC := 0;
    END IF;
    RETURN WARTOSC;
  END WARTOSC;
END;

CREATE TABLE AUTA OF AUTO;

INSERT INTO AUTA VALUES (AUTO('FIAT','BRAVA',60000,DATE '1999-11-30',25000));
INSERT INTO AUTA VALUES (AUTO('FORD','MONDEO',80000,DATE '1997-05-10',45000));
INSERT INTO AUTA VALUES (AUTO('MAZDA','323',12000,DATE '2000-09-22',52000));

CREATE OR REPLACE TYPE AUTO_OSOBOWE UNDER AUTO (
    LICZBA_MIEJSC NUMBER,
    KLIMATYZACJA NUMBER(1,0),
    OVERRIDING MEMBER FUNCTION WARTOSC RETURN NUMBER
);

CREATE OR REPLACE TYPE BODY AUTO_OSOBOWE AS
    OVERRIDING MEMBER FUNCTION WARTOSC RETURN NUMBER IS
        WARTOSC NUMBER;
    BEGIN
        WARTOSC := (SELF AS AUTO).WARTOSC();
        IF (KLIMATYZACJA = 1) THEN
            WARTOSC := WARTOSC * 1.5;
        END IF;
        RETURN WARTOSC;
    END;
END;

CREATE OR REPLACE TYPE AUTO_CIEZAROWE UNDER AUTO (
    MAX_LADOWNOSC NUMBER,
    OVERRIDING MEMBER FUNCTION WARTOSC RETURN NUMBER
);

CREATE OR REPLACE TYPE BODY AUTO_CIEZAROWE AS
    OVERRIDING MEMBER FUNCTION WARTOSC RETURN NUMBER IS
        WARTOSC NUMBER;
    BEGIN
        WARTOSC := (SELF AS AUTO).WARTOSC();
        IF (MAX_LADOWNOSC > 10) THEN
            WARTOSC := WARTOSC * 2;
        END IF;
        RETURN WARTOSC;
    END;
END;

INSERT INTO AUTA VALUES (AUTO_OSOBOWE('BMW', 'S5', 10000, DATE '2000-01-01', 100000, 4, 1));
INSERT INTO AUTA VALUES (AUTO_OSOBOWE('BMW', 'S6', 20000, DATE '2010-01-01', 50000, 5, 0));
INSERT INTO AUTA VALUES (AUTO_CIEZAROWE('MERCEDES', '123', 10000, DATE '2000-01-01', 50000, 1));
INSERT INTO AUTA VALUES (AUTO_CIEZAROWE('MERCEDES', '123', 20000, DATE '2015-01-01', 50000, 11));

SELECT X.MARKA, X.WARTOSC() FROM AUTA X;
