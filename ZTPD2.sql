--1.
CREATE TABLE MOVIES(
ID           NUMBER(12) PRIMARY KEY,
TITLE        VARCHAR2(400) NOT NULL,
CATEGORY     VARCHAR2(50),
YEAR         CHAR(4),
CAST         VARCHAR2(4000),
DIRECTOR  VARCHAR2(4000),
STORY        VARCHAR2(4000),
PRICE        NUMBER(5,2),
COVER        BLOB,
MIME_TYPE    VARCHAR2(50));

--2.
INSERT INTO MOVIES(ID, TITLE, CATEGORY, YEAR, CAST, DIRECTOR, STORY, PRICE,
COVER, MIME_TYPE) SELECT d.ID, d.TITLE, d.CATEGORY, TRIM(d.YEAR),
d.CAST, d.DIRECTOR, d.STORY, d.PRICE, c.IMAGE, c.MIME_TYPE
FROM DESCRIPTIONS d LEFT OUTER JOIN COVERS c
ON (d.ID=c.MOVIE_ID);

SELECT * FROM MOVIES;

--3.
SELECT * FROM MOVIES WHERE COVER IS null;

--4.
SELECT ID, TITLE, DBMS_LOB.GETLENGTH(COVER) AS FILESIZE
FROM MOVIES WHERE COVER IS NOT NULL;

--5.
SELECT ID, TITLE, DBMS_LOB.GETLENGTH(COVER) AS FILESIZE
FROM MOVIES WHERE COVER IS NULL;

--6.
SELECT * FROM all_directories;

--7.
UPDATE MOVIES SET
COVER = EMPTY_BLOB(), MIME_TYPE = 'image/jpeg'
WHERE ID = 66;

--8.
SELECT ID, TITLE, DBMS_LOB.GETLENGTH(COVER) AS FILESIZE
FROM MOVIES WHERE ID IN (65,66);

--9.
DECLARE
   lobd blob;
   fil BFILE := BFILENAME('ZSBD_DIR','escape.jpg');
BEGIN
   SELECT COVER INTO lobd
   FROM MOVIES WHERE ID = 66
   FOR UPDATE;
   dbms_lob.fileopen(fil);
   DBMS_LOB.LOADFROMFILE(lobd, fil, DBMS_LOB.GETLENGTH(fil));
   dbms_lob.fileclose(fil);
   COMMIT;
END;

--10.
CREATE TABLE TEMP_COVERS(
movie_id NUMBER(12),
image BFILE,
mime_type VARCHAR2(50));

--11.
INSERT INTO TEMP_COVERS(MOVIE_ID, IMAGE, MIME_TYPE)
VALUES(65, BFILENAME('ZSBD_DIR','escape.jpg'),
'image/jpeg');


--12.
SELECT MOVIE_ID, DBMS_LOB.GETLENGTH(IMAGE) AS FILESIZE
FROM TEMP_COVERS;

--13
DECLARE
    LOBD BLOB;
    FILS TEMP_COVERS.IMAGE%TYPE;
    MIME TEMP_COVERS.MIME_TYPE%TYPE;
BEGIN
    SELECT IMAGE, MIME_TYPE INTO FILS, MIME FROM TEMP_COVERS WHERE MOVIE_ID = 65;

    dbms_lob.createtemporary(LOBD, TRUE);

    DBMS_LOB.fileopen(FILS, DBMS_LOB.file_readonly);
    DBMS_LOB.LOADFROMFILE(LOBD, FILS, DBMS_LOB.GETLENGTH(FILS));
    DBMS_LOB.FILECLOSE(FILS);

    UPDATE MOVIES SET COVER = LOBD, MIME_TYPE = MIME WHERE ID = 65;

    dbms_lob.freetemporary(LOBD);

    COMMIT;
END;

--14
SELECT ID, DBMS_LOB.GETLENGTH(COVER) AS FILESIZE FROM MOVIES WHERE ID IN (65, 66);

--15
DROP TABLE MOVIES;
DROP TABLE TEMP_COVERS;
